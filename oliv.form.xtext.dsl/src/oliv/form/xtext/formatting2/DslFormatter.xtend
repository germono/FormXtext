/*
 * generated by Xtext 2.21.0
 */
package oliv.form.xtext.formatting2

import com.google.inject.Inject
import oliv.form.xtext.dsl.Model
import oliv.form.xtext.dsl.VariableCalcule
import oliv.form.xtext.services.DslGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class DslFormatter extends AbstractFormatter2 {
	
	@Inject extension DslGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		model.package.format
		for (_import : model.imports) {
			_import.format
		}
		for (truc : model.variables) {
			truc.format
		}
	}

	def dispatch void format(VariableCalcule variableCalcule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		variableCalcule.prepend[newLine]
		variableCalcule.expression.format
		variableCalcule.surround[newLine]
	}
	
	// TODO: implement for Plus, Minus, Multi, Div
}
